CREATE TABLE users (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    user_role VARCHAR2(20) CHECK (user_role IN ('STUDENT','HOST','REVIEWER')),
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE TABLE sessions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    host_id NUMBER,
    title VARCHAR2(255) NOT NULL,
    start_time TIMESTAMP,
    end_time TIMESTAMP,
    session_status VARCHAR2(20) DEFAULT 'PLANNED' CHECK (session_status IN ('PLANNED','RUNNING','ENDED')),
    session_type VARCHAR2(20) DEFAULT 'GROUP' CHECK (session_type IN ('GROUP','SELF')),
    is_reviewable CHAR(1) DEFAULT 'Y' CHECK (is_reviewable IN ('Y','N')),
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT fk_sessions_host FOREIGN KEY (host_id) REFERENCES users(id)
);

CREATE TABLE questions (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    session_id NUMBER,
    question_text CLOB NOT NULL,
    order_no NUMBER DEFAULT 1,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT fk_questions_session FOREIGN KEY (session_id) REFERENCES sessions(id)
);

CREATE TABLE answers (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    question_id NUMBER,
    user_id NUMBER,
    answer_text CLOB NOT NULL,
    score NUMBER CHECK (score BETWEEN 1 AND 10),
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT fk_answers_question FOREIGN KEY (question_id) REFERENCES questions(id),
    CONSTRAINT fk_answers_user FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE feedbacks (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    answer_id NUMBER,
    summary CLOB,
    strengths CLOB,
    weaknesses CLOB,
    improvement CLOB,
    model VARCHAR2(50) DEFAULT 'GPT-4',
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT fk_feedbacks_answer FOREIGN KEY (answer_id) REFERENCES answers(id)
);

CREATE TABLE question_pool (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category VARCHAR2(50) NOT NULL,
    difficulty VARCHAR2(20) CHECK (difficulty IN ('EASY','MEDIUM','HARD')),
    question_text CLOB NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP
);

CREATE TABLE reviews (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    session_id NUMBER,
    reviewer_id NUMBER,
    answer_id NUMBER,
    review_comment CLOB,
    rating NUMBER(2,1) CHECK (rating BETWEEN 0.0 AND 5.0),
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT fk_reviews_session FOREIGN KEY (session_id) REFERENCES sessions(id),
    CONSTRAINT fk_reviews_reviewer FOREIGN KEY (reviewer_id) REFERENCES users(id),
    CONSTRAINT fk_reviews_answer FOREIGN KEY (answer_id) REFERENCES answers(id)
);
